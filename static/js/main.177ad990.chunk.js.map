{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","startValue","Date","getFullYear","getMonth","endValue","placeholder","startDate","endDate","format","start","depth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KA6CeA,MAxCf,WACE,IAAMC,EAAmB,IAAIC,MAC3B,IAAIA,MAAOC,eACX,IAAID,MAAOE,WACX,IAEIC,EAAiB,IAAIH,MACzB,IAAIA,MAAOC,eACX,IAAID,MAAOE,WAAa,EACxB,IAaF,OACE,8BACE,cAAC,IAAD,CACEE,YAAY,mBACZC,UAAWN,EACXO,QAASH,EAKTI,OAAO,YACPC,MAAM,OACNC,MAAM,YCzBCC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.177ad990.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n// import { DateRangePickerComponent } from '@syncfusion/ej2-react-calendars'\nimport { DateRangePickerComponent } from \"@syncfusion/ej2-react-calendars\";\n\nfunction App() {\n  const startValue: Date = new Date(\n    new Date().getFullYear(),\n    new Date().getMonth(),\n    14\n  );\n  const endValue: Date = new Date(\n    new Date().getFullYear(),\n    new Date().getMonth() + 1,\n    15\n  );\n  // const minDate: Date = new Date(\n  //   new Date().getFullYear(),\n  //   new Date().getMonth(),\n  //   8\n  // );\n  // const maxDate: Date = new Date(\n  //   new Date().getFullYear(),\n  //   new Date().getMonth() + 1,\n  //   20\n  // );\n\n  return (\n    <div>\n      <DateRangePickerComponent\n        placeholder=\"Enter Date Range\"\n        startDate={startValue}\n        endDate={endValue}\n        // min={minDate}\n        // max={maxDate}\n        // minDays={3}\n        // maxDays={5}\n        format=\"dd-MMM-yy\"\n        start=\"Year\"\n        depth=\"Year\"\n      ></DateRangePickerComponent>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}